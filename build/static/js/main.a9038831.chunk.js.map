{"version":3,"sources":["simularLavacar.js","App.js","serviceWorker.js","index.js"],"names":["simular","horas","chegadaDeterministica","expressaoChegada","media","variancia","tempoServicoDeterministico","exponencial","maxFila","minutos","clientes","filaPorMinuto","funcionario","fila","atendendo","intervaloChegada","parseInt","random1","Math","random","random2","Z","sqrt","log","sin","PI","abs","round","parseFloat","intervaloServico","proximoCliente","terminoProximoServico","undefined","i","length","console","terminaServico","alocaCliente","id","push","cliente","tempoAtual","novaFila","entradaFila","entradaAtendimento","saidaAtendimento","filter","_","index","App","React","useState","setTime","setExpressaoChegada","setChegadaDeterministica","expressaoServico","setExpressaoServico","setTempoServicoDeterministico","setMedia","setVariancia","setExponencial","setMaxFila","className","defaultValue","onChange","target","value","onClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a9038831.chunk.js","sourcesContent":["export function simular ({ horas, chegadaDeterministica, expressaoChegada, media, variancia, tempoServicoDeterministico, exponencial ,maxFila}) {\n  const minutos = horas * 60\n  const clientes = []\n  const filaPorMinuto = []\n  let funcionario = { fila:[], atendendo: null}\n\n  function intervaloChegada(){\n    if(chegadaDeterministica){\n      return parseInt(chegadaDeterministica)\n    }\n\n    if(expressaoChegada === 'normal'){\n      const random1 = Math.random()\n      const random2 = Math.random()\n\n      const Z = Math.sqrt(-2*Math.log(random1)) * Math.sin(2*Math.PI*random2)\n      return Math.abs(Math.round(parseFloat(media) + (parseFloat(variancia) * Z)))\n    }\n  }\n\n  function intervaloServico(){\n    if(tempoServicoDeterministico){\n      return parseInt(tempoServicoDeterministico)\n    }\n\n    if(exponencial){\n        const result = Math.round((-exponencial * Math.log(Math.random())))\n        return result || 1\n    }\n  }\n\n  let proximoCliente = intervaloChegada()\n\n  let terminoProximoServico = undefined\n\n  for (let i = 0; i <= minutos; i++) {\n    if(funcionario.fila.length >= maxFila) {\n      console.log('Fila atingiu o tamanho máximo')\n      return\n    }\n\n    if(funcionario.atendendo && i === terminoProximoServico ){\n      terminaServico(i)\n    }\n\n    if (i == proximoCliente) {\n      proximoCliente += intervaloChegada()\n      alocaCliente({id:i},i)\n    }\n\n    filaPorMinuto.push(funcionario.fila.length)\n  }\n\n  function alocaCliente(cliente,tempoAtual){\n    if(funcionario.atendendo){\n      const novaFila = [...funcionario.fila, cliente]\n\n      funcionario = {...funcionario, fila: novaFila}\n      clientes[tempoAtual] = {id:tempoAtual, entradaFila: tempoAtual}\n    }else{\n      funcionario = {...funcionario, atendendo: cliente}\n      terminoProximoServico = intervaloServico() + tempoAtual\n      clientes[tempoAtual] = {...clientes[tempoAtual], id:tempoAtual, entradaFila: 0, entradaAtendimento: tempoAtual}\n\n    }\n  }\n\n  console.log(funcionario)\n  console.log(clientes)\n\n  // clientes.map((cliente, index)=>{\n  //   if(cliente.entradaFila && cliente.entradaAtendimento){\n  //     console.log('tempo na fila: ', cliente.entradaAtendimento - cliente.entradaFila )\n  //   }\n  // })\n\n  var mediaEntidadesNaFila = 0\n  for(let i=0;i<filaPorMinuto.length;i++){\n    mediaEntidadesNaFila += filaPorMinuto[i]\n  }\n  mediaEntidadesNaFila = mediaEntidadesNaFila / filaPorMinuto.length\n\n  // console.log('Média de entidades na fila: ', mediaEntidadesNaFila)\n\n  if(funcionario.fila.length >= maxFila){\n  }\n\n  function terminaServico(tempoAtual){\n\n    clientes[funcionario.atendendo.id] = {...clientes[funcionario.atendendo.id], saidaAtendimento: tempoAtual}\n\n    if(funcionario.fila.length > 0){\n      const novaFila = funcionario.fila.filter((_,index) => index !== 0)\n\n\n      clientes[funcionario.fila[0].id] = {...clientes[funcionario.fila[0].id], entradaAtendimento: tempoAtual}\n\n      funcionario = {...funcionario, atendendo:funcionario.fila[0], fila: novaFila}\n      terminoProximoServico = intervaloServico() + tempoAtual\n\n\n    }else{\n      funcionario = {...funcionario, atendendo: false}\n    }\n\n\n  }\n\n  function normal(media, variancia){\n    const random1 = Math.random()\n    const random2 = Math.random()\n\n    const Z = Math.sqrt(-2*Math.log(random1)) * Math.sin(2*Math.PI*random2)\n    return media + (variancia * Z)\n  }\n\n}\n","import React from 'react'\nimport './App.css'\nimport { simular } from './simularLavacar'\n\nfunction App() {\n  function run() {\n    if (expressaoChegada === 'normal') {\n      simular({ horas, expressaoChegada, media, variancia, tempoServicoDeterministico, exponencial,maxFila })\n\n    } else {\n      simular({ horas, chegadaDeterministica, tempoServicoDeterministico, exponencial,maxFila })\n    }\n  }\n\n  const [horas, setTime] = React.useState(2)\n  const [expressaoChegada, setExpressaoChegada] = React.useState('fixed')\n  const [chegadaDeterministica, setChegadaDeterministica] = React.useState(0)\n  const [expressaoServico, setExpressaoServico] = React.useState('fixed')\n  const [tempoServicoDeterministico, setTempoServicoDeterministico] = React.useState(0)\n  const [media, setMedia] = React.useState()\n  const [variancia, setVariancia] = React.useState()\n  const [exponencial, setExponencial] = React.useState()\n  const [maxFila, setMaxFila] = React.useState()\n\n  return (\n    <div className=\"App\">\n      <div>\n        <div className='row'>\n          <div className='col-5'>\n            {/* <form onSub> */}\n            <div className=\"form-group\">\n              <label >Tamanho maximo de fila</label>\n              <input defaultValue='2' className=\"form-control\" onChange={({ target }) => setMaxFila(target.value)} />\n            </div>\n\n            <div className=\"form-group\">\n              <label >Horas</label>\n              <input defaultValue='2' className=\"form-control\" onChange={({ target }) => setTime(target.value)} />\n            </div>\n            <div className=\"form-group\">\n              <label >Tempo entre chegadas</label>\n              <select defaultValue='fixed' className=\"form-control\" onChange={({ target }) => setExpressaoChegada(target.value)} >\n                <option value='normal'>Aleatório normal</option>\n                <option value='fixed'>Determinístico</option>\n              </select>\n            </div>\n            {expressaoChegada === 'fixed' && (\n              <div className=\"form-group\">\n                <label >Intervalo de chegada</label>\n                <input className=\"form-control\" onChange={({ target }) => setChegadaDeterministica(target.value)} />\n              </div>\n            )}\n\n            {expressaoChegada === 'normal' && (\n              <>\n                <div className=\"form-group\">\n                  <label >Média</label>\n                  <input className=\"form-control\" onChange={({ target }) => setMedia(target.value)} />\n                </div>\n                <div className=\"form-group\">\n                  <label >Variância</label>\n                  <input className=\"form-control\" onChange={({ target }) => setVariancia(target.value)} />\n                </div>\n              </>\n            )}\n            <br />\n            <br />\n            <br />\n            <hr />\n\n            <div className=\"form-group\">\n              <label >Tempo de serviço</label>\n              <select defaultValue='fixed' className=\"form-control\" onChange={({ target }) => { setExpressaoServico(target.value);setExponencial(0);setTempoServicoDeterministico(0) }} >\n                <option value='expo'>Aleatório exponencial</option>\n                <option value='fixed'>Determinístico</option>\n              </select>\n            </div>\n            {expressaoServico === 'fixed' && (\n              <div className=\"form-group\">\n                <label >Tempo de serviço</label>\n                <input className=\"form-control\" onChange={({ target }) => setTempoServicoDeterministico(target.value)} />\n              </div>\n            )}\n\n            {expressaoServico === 'expo' && (\n              <div className=\"form-group\">\n                <label >Media Exponencial</label>\n                <input className=\"form-control\" onChange={({ target }) => setExponencial(target.value)} />\n              </div>\n            )}\n\n            <button onClick={run}>Simular</button>\n            {/* </form> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}